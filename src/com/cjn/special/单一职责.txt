1.单一职责原则，简称SRP，就一个类而言，应该仅有一个引起它变化的原因。

2.如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或者抑制这个类完成其他职责的能力。
这种耦合会导致脆弱的设计，当发生变化时，设计会遭受到意想不到的破坏。

3.软件设计真正要做的许多内容，就是发现职责并把那些职责互相分离。如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多余一个的职责。
