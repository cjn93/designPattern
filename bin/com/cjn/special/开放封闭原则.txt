1.开放封闭原则 简称 OCP 或者叫 开-闭原则
2.开放-封闭原则，是说软件实体(类、模块、函数等等)应该可以扩展，但是不可修改。

3.两个特征：对于扩展是开放的，对于更改是封闭的。
4.怎样的设计才能面对需求的改变却可以保持相对的稳定，从而使得系统可以在第一个版本以后不断推出新的版本呢？

例如：当老板规定上班时间的例子
每天保证8小时工作时间。早到的早下班，晚到的晚下班或者每人每月允许三次迟到，迟到者当天下午补班。对于销售人员，以业绩为标准。
这其实是对工作时间或者业绩成效的修改关闭，而对时间制度扩展的开放。
5.无论模块是多么的‘封闭’，都会存在一些无法对之封闭的变化。既然不可能完全封闭，设计人员必须对于他设计的模块应该应对哪种变化封闭做出选择。
他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那些变化。
6.面对需求，对程序的改动是通过增加新代码进行的，而不是改变现有的代码。
7.开放-封闭原则是面向对象设计的核心所在。遵循这个原则可以带来程序中呈现出频繁变化的那些部分做出抽象，
然而，对于应用程序中的每个部分都刻意地进行抽象同样不是一个好主意。拒绝不成熟的抽象和抽象本身一样重要。